{"version":3,"sources":["components/TodoList.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","text","todo","todos","setTodos","className","completed","onClick","map","item","id","filter","el","Todo","setText","setStatus","filteredTodos","useEffect","document","querySelector","focus","onSubmit","e","preventDefault","text1","Math","random","type","value","onChange","target","required","name","App","useState","status","setFilteredTodos","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1f55e618.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction TodoList({text, todo, todos, setTodos}) {\r\n    const handleDelete = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id))\r\n    }\r\n    const handleComplete = () => {\r\n        setTodos(\r\n            todos.map(item => {\r\n                if (item.id === todo.id){\r\n                    return {\r\n                        ...item,\r\n                        completed: !item.completed\r\n                    }\r\n                }\r\n                return item;\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className='todo'>\r\n            <li className={`todo-list ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n            <button onClick={handleComplete} className='completeBtn'>✓</button>\r\n            <button onClick={handleDelete} className='trashBtn'>×</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React, { useEffect } from 'react'\r\nimport './Todo.scss'\r\nimport TodoList from './TodoList';\r\n\r\nfunction Todo({text, setText, todos, setTodos, setStatus, filteredTodos}) {\r\n    useEffect(()=> {\r\n        const input1 = document.querySelector('input')\r\n        input1.focus(); \r\n    },[])\r\n    const handeleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos,\r\n            { text1: text , completed: false, id: Math.random() * 1000} \r\n          ])\r\n        setText('')\r\n    }\r\n    const handleFilter = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n    return (\r\n        <div className='form-container'>\r\n            <form onSubmit={handeleSubmit}>\r\n                <div>\r\n                    <input className='input' type='text' value={text} onChange={e => setText(e.target.value)} required/>\r\n                    <button type='submit' >+</button>\r\n                </div>\r\n                <div className='select'>\r\n                    <select name='todos' onChange={handleFilter} className='filterTodos'>\r\n                        <option value='all'>All</option>\r\n                        <option value='completed'>Completed</option>\r\n                        <option value='uncompleted'>Uncompleted</option>\r\n                    </select>\r\n                </div>\r\n            </form>\r\n            <div id='div1'>\r\n               <ul id='ul1'>\r\n                    {\r\n                        filteredTodos.map(todo => (\r\n                        <TodoList\r\n                             key={todo.id} \r\n                             todo={todo} \r\n                             todos={todos} \r\n                             setTodos={setTodos} \r\n                             text={todo.text1}\r\n                        />))\r\n                    }\r\n               </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React ,{ useState, useEffect } from 'react'\nimport './App.scss';\nimport Todo from './components/Todo';\n\nfunction App() {\n  const [text, setText] = useState('') //for text\n  const [todos, setTodos] = useState([]) // where main todos stored\n  const [status, setStatus] = useState('all') // in which seate in it\n  const [filteredTodos, setFilteredTodos] = useState([]) // for storing filtered ones\n  useEffect(()=>{\n    getLocalTodos()\n  },[])\n  useEffect(()=>{\n    filterHandler()\n    saveLocalTodos()\n  },[todos, status])\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  } \n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null ){\n      localStorage.setItem('todos', JSON.stringify([]))\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'))\n      setTodos(todoLocal)\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Todo\n        filteredTodos={filteredTodos}\n        setFilteredTodos={setFilteredTodos} \n        status={status} \n        setStatus={setStatus} \n        todos={todos} \n        setTodos={setTodos} \n        text={text} \n        setText={setText}\n      />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}