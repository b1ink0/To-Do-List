{"version":3,"sources":["components/img/delete.svg","components/img/tic.svg","components/TodoList.js","components/img/moon1.svg","components/img/sun.svg","components/Todo.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["TodoList","TodoHeight","text","todo","todos","setTodos","night","useEffect","handleTrash","document","querySelector","filter","item","trash","className","id","completed","onClick","map","src","img2","getElementById","offsetHeight","style","margin","setTimeout","el","img1","Todo","setText","status","setStatus","filteredTodos","setNight","focus","onSubmit","e","preventDefault","text1","Math","random","type","LightMode","NightMode","placeholder","value","onChange","target","required","name","App","useState","setFilteredTodos","getLocalN","getLocalTodos","filterHandler","saveLocalN","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","localN","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c238e605.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/delete.90a1fb1c.svg\";","export default __webpack_public_path__ + \"static/media/tic.54965f02.svg\";","import React, {useEffect} from 'react'\r\nimport img1 from './img/delete.svg'\r\nimport img2 from './img/tic.svg'\r\n\r\nfunction TodoList({text, todo, todos, setTodos, night}) {\r\n    let TodoHeight;\r\n    useEffect(()=>{\r\n        handleTrash()\r\n    },[])\r\n    const handleTrash = () => {\r\n        let trash = document.querySelector('.trash') || 0;\r\n        setTodos(\r\n            todos.filter(item => item.trash == false)\r\n        )\r\n    }\r\n    const handleDelete = () => {  \r\n        TodoHeight = document.getElementById(`${todo.id}`).offsetHeight;\r\n        const hmm = document.getElementById(`${todo.id}`)\r\n        hmm.style.margin = `${-TodoHeight*0.5}px`;\r\n        setTodos(\r\n            todos.map(item => {\r\n                if (item.id === todo.id){\r\n                    return {\r\n                        ...item,\r\n                        trash: !item.trash\r\n                    }\r\n                }\r\n                return item;\r\n            })\r\n        )\r\n        setTimeout(function() {\r\n            setTodos(todos.filter((el) => el.id !== todo.id)) \r\n        },500)\r\n    }\r\n    const handleComplete = () => {\r\n        setTodos(\r\n            todos.map(item => {\r\n                if (item.id === todo.id){\r\n                    return {\r\n                        ...item,\r\n                        completed: !item.completed\r\n                    }\r\n                }\r\n                return item;\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className={`${night ? \"todoN\" : \"todo\"} ${todo.trash ? \"trash\" : ''}`} id={todo.id}>\r\n            <li className={`todo-list ${todo.completed ? \"completed\" : \"\"}`}><span>{text}</span></li>\r\n            <button onClick={handleComplete} className={`${night ? \"completeBtnN\" : 'completeBtn'} ${todo.completed ? \"completedBtn\" : \"\"}`}><img src={img2}/></button>\r\n            <button onClick={handleDelete} className={`${night ? \"trashBtnN\" : \"trashBtn\"}`}><img src={img1}/></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","export default __webpack_public_path__ + \"static/media/moon1.a38c7ab3.svg\";","export default __webpack_public_path__ + \"static/media/sun.1eccdece.svg\";","import React, { useEffect } from 'react'\r\nimport './Todo.scss'\r\nimport TodoList from './TodoList';\r\nimport NightMode from './img/moon1.svg'\r\nimport LightMode from './img/sun.svg'\r\n\r\n\r\nfunction Todo({text, setText,\r\n               todos, setTodos,\r\n               status, setStatus,\r\n               filteredTodos,\r\n               night, setNight,\r\n            }) {\r\n    useEffect(()=> {\r\n        const input1 = document.querySelector('input')\r\n        input1.focus(); \r\n    },[])\r\n    const handeleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos,\r\n            { text1: text , completed: false, trash: false, id: Math.random() * 1000} \r\n          ])\r\n        setText('')\r\n    }\r\n    const handleFilter = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n    const handleNightBtn = () => {\r\n        setNight(!night);\r\n    }\r\n    return (\r\n        <div className='form-container'>\r\n            <form onSubmit={handeleSubmit}>\r\n                <h1 className='h1'>To-Do-List</h1>\r\n                <button onClick={handleNightBtn} type='button' className={`${night ? \"nightModeN\" : \"nightMode\"}`}>\r\n                    <img className={`${night ? \"nightModeImgN\" : \"nightModeImg\"}`} src={`${night ? LightMode : NightMode}`}/>\r\n                </button>\r\n                <div className={`${night ? \"inputDivN\" : \"inputDiv\"}`}>\r\n                    <input placeholder='Add your new to-do...' className={`${night ? \"inputN\" : \"input\"}`} type='text' value={text} onChange={e => setText(e.target.value)} required/>\r\n                    <button className={`${night ? \"inputBtnN\" : \"inputBtn\"}`} type='submit' ><span className='btnSpan1'></span><span className='btnSpan2'></span></button>\r\n                </div>\r\n                <div className={`${night ? \"selectN1\" : \"select\"}`}>\r\n                    <h1>To-Do :  </h1>\r\n                    <select name='todos' onChange={handleFilter} className={`${night ? \"selectN\" : \"filteredTodos\"}`}>\r\n                        <option value='all'>All</option>\r\n                        <option value='completed'>Completed</option>\r\n                        <option value='uncompleted'>Uncompleted</option>\r\n                    </select>\r\n                </div>\r\n                <h1 className='h2'>List : {status}</h1>\r\n            </form> \r\n            <div id='div1'>\r\n               <ul id='ul1'>\r\n                    {\r\n                        filteredTodos.map(todo => (\r\n                        <TodoList\r\n                             key={todo.id} \r\n                             todo={todo} \r\n                             todos={todos} \r\n                             setTodos={setTodos} \r\n                             text={todo.text1}\r\n                             night={night}\r\n                        />))\r\n                    }\r\n               </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React ,{ useState, useEffect } from 'react'\nimport './App.scss';\nimport Todo from './components/Todo';\n\nfunction App() {\n  const [text, setText] = useState('') //for text\n  const [todos, setTodos] = useState([]) // where main todos stored\n  const [status, setStatus] = useState('all') // in which seate in it\n  const [night, setNight] = useState(false)\n  const [filteredTodos, setFilteredTodos] = useState([]) // for storing filtered ones\n  useEffect(()=>{\n    getLocalN()\n    getLocalTodos()\n  },[])\n  useEffect(()=>{\n    filterHandler()\n    saveLocalN()\n    saveLocalTodos()\n  },[todos, status, night])\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  } \n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null ){\n      localStorage.setItem('todos', JSON.stringify([]))\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'))\n      setTodos(todoLocal)\n    }\n  }\n  const saveLocalN = () => {\n    localStorage.setItem('night', JSON.stringify(night))\n  }\n  const getLocalN = () => {\n    if (localStorage.getItem('night') === null ){\n      localStorage.setItem('night', JSON.stringify())\n    } else {\n      let localN = JSON.parse(localStorage.getItem('night'))\n      setNight(localN)\n    }\n  }\n  return (\n    <div className={`${night ? \"AppN\" : \"App\"}`}>\n      <Todo\n        filteredTodos={filteredTodos}\n        setFilteredTodos={setFilteredTodos} \n        status={status} \n        setStatus={setStatus} \n        todos={todos} \n        setTodos={setTodos} \n        text={text} \n        setText={setText}\n        night={night}\n        setNight={setNight}\n      />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import swDev from './swDev'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root')\n);\n// swDev(); \nserviceWorkerRegistration.register();"],"sourceRoot":""}